security:
    access_decision_manager:
        strategy: unanimous
    encoders:
        App\Entity\User: bcrypt
    providers:
        database_users:
            entity: { class: App\Entity\User, property: username }
    role_hierarchy:
        ROLE_CLIENT:      ROLE_USER
        ROLE_ADMIN:       ROLE_CLIENT
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        ROLE_OWNER: ROLE_SUPER_ADMIN
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # les urls auxquels s'appliquent ce firewall, dans ce cas, ce sont toutes les urls
            pattern: ^/
 
            # La connexion n'est pas requise sur toutes les pages
            # par exemple la page d'accueil
            anonymous: true
 
            form_login:
                # Le nom de la route de la page de connexion
                check_path: security_login
                # Le nom de la route où se trouve le formulaire de connexion
                # Si un utilisateur tente d'acceder à une page protégée sans en avoir les droits
                # il sera redirigé sur cette page
                login_path: security_login
                # Securisation des formulaires
                csrf_token_generator: security.csrf.token_manager
                # La page par defaut apres une connexion reussie
                default_target_path: admin
 
            logout:
                # La route où se trouve le process de deconnexion
                path: security_logout
                # La route sur laquelle doit etre rediriger l'utilisateur apres une deconnexion
                target: index
 
    access_control:
        # Les regles de securité
        # Là dans ce cas seul les utilisateurs ayant le rôle ROLE_ADMIN
        # peuvent acceder à toutes les pages commençant par /admin
        - { path: '^/dashboard', roles: ROLE_CLIENT }
        - { path: '^/account', roles: ROLE_CLIENT }
        - { path: '^/website', roles: ROLE_CLIENT }
        - { path: '^/kawaii-admin', roles: ROLE_ADMIN }
        - { path: '^/kawaii-super-admin', roles: ROLE_SUPER_ADMIN }
        - { path: '^/kawaii-owner-acces', roles: ROLE_OWNER}

